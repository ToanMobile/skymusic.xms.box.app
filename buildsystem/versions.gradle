ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = '7.3.1'
versions.realm_plugin       = "10.13.0"
versions.google_servive     = "4.3.14"
versions.lifecycle          = "2.5.1"
versions.support            = "1.4.0"
versions.media              = "1.6.0"
versions.annotations        = "1.5.0"
versions.ktx                = "1.9.0"
versions.work               = "2.7.1"
versions.supportAnko        = "0.10.8"
versions.kotlin             = "1.7.22"
versions.mutidex            = "2.0.1"
versions.navigation         = "2.5.3"
versions.crashlyticsPlugin  = "2.8.1"
versions.crashlytics        = "18.2.6"
versions.constraintlayout   = "2.1.4"
versions.coroutines         = "1.6.4"
//Libraries :Core
versions.dagger             = "2.44.2"
versions.logger             = "2.2.0"
versions.glide              = "4.14.2"
versions.rxkotlin           = "3.0.1"
versions.rxandroid          = "3.0.0"
versions.eventbus           = "3.3.1"
versions.retrofit           = "2.9.0"
versions.okHttp             = "3.14.9"
versions.okHttpLogging      = "3.1.0"
versions.permisstion        = "4.8.0"
//Utils
versions.utilcode           = "1.31.0"
versions.realm_extensions   = "2.5.0"
//Libraries :App
versions.exoplayer          = "2.14.2"
versions.filedownloader     = "1.7.8-SNAPSHOT"
versions.jwtdecode          = "1.1.1"
versions.joda               = "2.10.1"
versions.loading            = "2.1.3"
versions.ffmpeg             = "1.1.7"
versions.youTube_extractor  = "2.0.1"
def deps = [:]

def support = [:]
support.annotations         = "androidx.annotation:annotation:$versions.annotations"
support.app_compat          = "androidx.appcompat:appcompat:$versions.support"
support.fragment            = "androidx.fragment:fragment-ktx:$versions.support"
support.design              = "com.google.android.material:material:$versions.support"
support.media               = "androidx.media:media:$versions.media"
support.constraint_layout   = "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
deps.support = support

def core = [:]
core.rx_kotlin              = "io.reactivex.rxjava3:rxkotlin:$versions.rxkotlin"
core.rx_android             = "io.reactivex.rxjava3:rxandroid:$versions.rxandroid"
core.eventbus               = "org.greenrobot:eventbus:$versions.eventbus"
core.logger                 = "com.orhanobut:logger:$versions.logger"
core.crashlytics            = "com.google.firebase:firebase-crashlytics:$versions.crashlytics"
core.coroutines             = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
deps.core = core

def libCore =[:]
libCore.permisstion         = "org.permissionsdispatcher:permissionsdispatcher:$versions.permisstion"
libCore.ok_httpLogging      = "com.github.ihsanbal:LoggingInterceptor:$versions.okHttpLogging"
libCore.glide_recycler      = "com.github.bumptech.glide:recyclerview-integration:$versions.glide"
deps.libCore = libCore

def utils =[:]
utils.utilcode              = "com.blankj:utilcodex:$versions.utilcode"
utils.ktx                   = "androidx.core:core-ktx:$versions.ktx"
utils.realm_extensions      = "com.github.vicpinm:krealmextensions:$versions.realm_extensions"
deps.utils = utils

def room = [:]
room.runtime                = "androidx.room:room-runtime::$versions.lifecycle"
room.compiler               = "androidx.room:room-compiler:$versions.lifecycle"
room.rxjava2                = "androidx.room:room-rxjava2:$versions.lifecycle"
room.testing                = "androidx.room:room-testing:$versions.lifecycle"
deps.room = room

def lifecycle = [:]
//lifecycle.extensions        = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.runtime           = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
lifecycle.live_data         = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
lifecycle.viewmodel         = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.testing           = "androidx.core:core-testing:$versions.lifecycle"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime            = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson               = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.simplexml          = "com.squareup.retrofit2:converter-simplexml:$versions.retrofit"
retrofit.rxjava             = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.okhttp             = "com.squareup.okhttp3:okhttp:$versions.okHttp"
deps.retrofit = retrofit

def glide = [:]
glide.glide                 = "com.github.bumptech.glide:glide:$versions.glide"
glide.integration           = "com.github.bumptech.glide:okhttp3-integration:$versions.glide"
deps.glide = glide

def dagger = [:]
dagger.runtime              = "com.google.dagger:dagger:$versions.dagger"
dagger.android              = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support      = "com.google.dagger:dagger-android-support:$versions.dagger"
deps.dagger = dagger

def download = [:]
download.filedownloader     = "com.liulishuo.filedownloader:library:$versions.filedownloader"
deps.download = download

def navigation = [:]
navigation.runtime          = "android.arch.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment         = "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui               = "android.arch.navigation:navigation-ui-ktx:$versions.navigation"
deps.navigation = navigation

def library = [:]
library.jwtdecode           = "com.auth0.android:jwtdecode:$versions.jwtdecode"
library.ffmpeg              = "nl.bravobit:android-ffmpeg:$versions.ffmpeg"
library.loading             = "com.wang.avi:library:$versions.loading"
library.joda                = "joda-time:joda-time:$versions.joda"
library.exoplayer           = "com.google.android.exoplayer:exoplayer:$versions.exoplayer"
library.exoHttp             = "com.google.android.exoplayer:extension-okhttp:$versions.exoplayer"
library.youtube_extractor   = "com.github.HaarigerHarald:android-youtubeExtractor:master-SNAPSHOT"
deps.library = library

def compiler = [:]
compiler.permisstion        = "org.permissionsdispatcher:permissionsdispatcher-processor:$versions.permisstion"
compiler.glide              = "com.github.bumptech.glide:compiler:$versions.glide"
compiler.lifecycle          = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
compiler.dagger_compiler    = "com.google.dagger:dagger-compiler:$versions.dagger"
compiler.android_compiler   = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.compiler = compiler

def kotlin = [:]
kotlin.stdlib               = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test                 = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
deps.kotlin = kotlin

deps.android_gradle_plugin  = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.kotlin_plugin          = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin_allopen         = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.realm_plugin           = "io.realm:realm-gradle-plugin:$versions.realm_plugin"
deps.realm_processor        = "io.realm:realm-annotations-processor:$versions.realm_plugin"
deps.safe_args_plugin       = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.crashlyticsPlugin      = "com.google.firebase:firebase-crashlytics-gradle:$versions.crashlyticsPlugin"
deps.multidex               = "androidx.multidex:multidex:$versions.mutidex"
deps.google_service         = "com.google.gms:google-services:$versions.google_servive"
deps.work                   = "androidx.work:work-runtime-ktx:$versions.work"
ext.deps = deps

def build_versions = [:]
build_versions.app_id       = "com.nct.xmsbox"
build_versions.min_sdk      = 19
build_versions.target_sdk   = 33
build_versions.versionCode  = 352
build_versions.versionName  = "3.5.2"
ext.build_versions = build_versions

def key_store = [:]
key_store.keystore          = "$rootProject.projectDir/buildsystem/xms-box-keystore.jks"
key_store.keystorePass      = "@nct@xms@box"
key_store.alias             = "xms-box-keystore"
key_store.aliasPass         = "@nct@xms@box"
key_store.proguard_rules    = "$rootProject.projectDir/buildsystem/proguard-rules.pro"
key_store.proguard_rx       = "$rootProject.projectDir/buildsystem/proguard-rx-rules.pro"
key_store.proguard_square   = "$rootProject.projectDir/buildsystem/proguard-square.pro"
key_store.proguard_support  = "$rootProject.projectDir/buildsystem/proguard-support.pro"
ext.key_store = key_store

@SuppressWarnings("GrMethodMayBeStatic")
def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.mavenCentral()
    handler.maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
        url 'https://jitpack.io'
    }
    handler.maven {
        url 'https://maven.fabric.io/public'
    }
    handler.maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
   /* handler.maven {
        url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'
    }*/
}
ext.addRepos = this.&addRepos
